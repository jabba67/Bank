"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/;
var IP_ADDRESS_PATTERN = /(\d+\.){3}\d+/;
var DOTS_PATTERN = /\.\./;
var DOT_PATTERN = /\./;
var S3_HOSTNAME_PATTERN = /^(.+\.)?s3[.-]([a-z0-9-]+)\./;
var S3_US_EAST_1_ALTNAME_PATTERN = /^s3(-external-1)?\.amazonaws\.com$/;
var AWS_PARTITION_SUFFIX = "amazonaws.com";
function bucketHostname(_a) {
    var _b = _a.accelerateEndpoint, accelerateEndpoint = _b === void 0 ? false : _b, baseHostname = _a.baseHostname, bucketName = _a.bucketName, _c = _a.dualstackEndpoint, dualstackEndpoint = _c === void 0 ? false : _c, _d = _a.pathStyleEndpoint, pathStyleEndpoint = _d === void 0 ? false : _d, _e = _a.tlsCompatible, tlsCompatible = _e === void 0 ? true : _e;
    if (!S3_HOSTNAME_PATTERN.test(baseHostname)) {
        return {
            bucketEndpoint: false,
            hostname: baseHostname
        };
    }
    var _f = tslib_1.__read(S3_US_EAST_1_ALTNAME_PATTERN.test(baseHostname)
        ? ["us-east-1", AWS_PARTITION_SUFFIX]
        : partitionSuffix(baseHostname), 2), region = _f[0], hostnameSuffix = _f[1];
    if (pathStyleEndpoint ||
        !isDnsCompatibleBucketName(bucketName) ||
        (tlsCompatible && DOT_PATTERN.test(bucketName))) {
        return {
            bucketEndpoint: false,
            hostname: dualstackEndpoint
                ? "s3.dualstack." + region + "." + hostnameSuffix
                : baseHostname
        };
    }
    if (accelerateEndpoint) {
        baseHostname = "s3-accelerate" + (dualstackEndpoint ? ".dualstack" : "") + "." + hostnameSuffix;
    }
    else if (dualstackEndpoint) {
        baseHostname = "s3.dualstack." + region + "." + hostnameSuffix;
    }
    return {
        bucketEndpoint: true,
        hostname: bucketName + "." + baseHostname
    };
}
exports.bucketHostname = bucketHostname;
/**
 * Determines whether a given string is DNS compliant per the rules outlined by
 * S3. Length, capitaization, and leading dot restrictions are enforced by the
 * DOMAIN_PATTERN regular expression.
 *
 * @see https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html
 */
function isDnsCompatibleBucketName(bucketName) {
    return (DOMAIN_PATTERN.test(bucketName) &&
        !IP_ADDRESS_PATTERN.test(bucketName) &&
        !DOTS_PATTERN.test(bucketName));
}
function partitionSuffix(hostname) {
    var parts = hostname.match(S3_HOSTNAME_PATTERN);
    return [parts[2], hostname.replace(new RegExp("^" + parts[0]), "")];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVja2V0SG9zdG5hbWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvYnVja2V0SG9zdG5hbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsSUFBTSxjQUFjLEdBQUcsc0NBQXNDLENBQUM7QUFDOUQsSUFBTSxrQkFBa0IsR0FBRyxlQUFlLENBQUM7QUFDM0MsSUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDO0FBQzVCLElBQU0sV0FBVyxHQUFHLElBQUksQ0FBQztBQUN6QixJQUFNLG1CQUFtQixHQUFHLDhCQUE4QixDQUFDO0FBQzNELElBQU0sNEJBQTRCLEdBQUcsb0NBQW9DLENBQUM7QUFDMUUsSUFBTSxvQkFBb0IsR0FBRyxlQUFlLENBQUM7QUFnQjdDLFNBQWdCLGNBQWMsQ0FBQyxFQU9KO1FBTnpCLDBCQUEwQixFQUExQiwrQ0FBMEIsRUFDMUIsOEJBQVksRUFDWiwwQkFBVSxFQUNWLHlCQUF5QixFQUF6Qiw4Q0FBeUIsRUFDekIseUJBQXlCLEVBQXpCLDhDQUF5QixFQUN6QixxQkFBb0IsRUFBcEIseUNBQW9CO0lBRXBCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUU7UUFDM0MsT0FBTztZQUNMLGNBQWMsRUFBRSxLQUFLO1lBQ3JCLFFBQVEsRUFBRSxZQUFZO1NBQ3ZCLENBQUM7S0FDSDtJQUVLLElBQUE7OzJDQUkyQixFQUoxQixjQUFNLEVBQUUsc0JBSWtCLENBQUM7SUFFbEMsSUFDRSxpQkFBaUI7UUFDakIsQ0FBQyx5QkFBeUIsQ0FBQyxVQUFVLENBQUM7UUFDdEMsQ0FBQyxhQUFhLElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUMvQztRQUNBLE9BQU87WUFDTCxjQUFjLEVBQUUsS0FBSztZQUNyQixRQUFRLEVBQUUsaUJBQWlCO2dCQUN6QixDQUFDLENBQUMsa0JBQWdCLE1BQU0sU0FBSSxjQUFnQjtnQkFDNUMsQ0FBQyxDQUFDLFlBQVk7U0FDakIsQ0FBQztLQUNIO0lBRUQsSUFBSSxrQkFBa0IsRUFBRTtRQUN0QixZQUFZLEdBQUcsbUJBQ2IsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBRSxVQUNuQyxjQUFnQixDQUFDO0tBQ3RCO1NBQU0sSUFBSSxpQkFBaUIsRUFBRTtRQUM1QixZQUFZLEdBQUcsa0JBQWdCLE1BQU0sU0FBSSxjQUFnQixDQUFDO0tBQzNEO0lBRUQsT0FBTztRQUNMLGNBQWMsRUFBRSxJQUFJO1FBQ3BCLFFBQVEsRUFBSyxVQUFVLFNBQUksWUFBYztLQUMxQyxDQUFDO0FBQ0osQ0FBQztBQTlDRCx3Q0E4Q0M7QUFFRDs7Ozs7O0dBTUc7QUFDSCxTQUFTLHlCQUF5QixDQUFDLFVBQWtCO0lBQ25ELE9BQU8sQ0FDTCxjQUFjLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUMvQixDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDcEMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUMvQixDQUFDO0FBQ0osQ0FBQztBQUVELFNBQVMsZUFBZSxDQUFDLFFBQWdCO0lBQ3ZDLElBQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsbUJBQW1CLENBQXFCLENBQUM7SUFFdEUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLE1BQUksS0FBSyxDQUFDLENBQUMsQ0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUN0RSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRE9NQUlOX1BBVFRFUk4gPSAvXlthLXowLTldW2EtejAtOVxcLlxcLV17MSw2MX1bYS16MC05XSQvO1xuY29uc3QgSVBfQUREUkVTU19QQVRURVJOID0gLyhcXGQrXFwuKXszfVxcZCsvO1xuY29uc3QgRE9UU19QQVRURVJOID0gL1xcLlxcLi87XG5jb25zdCBET1RfUEFUVEVSTiA9IC9cXC4vO1xuY29uc3QgUzNfSE9TVE5BTUVfUEFUVEVSTiA9IC9eKC4rXFwuKT9zM1suLV0oW2EtejAtOS1dKylcXC4vO1xuY29uc3QgUzNfVVNfRUFTVF8xX0FMVE5BTUVfUEFUVEVSTiA9IC9eczMoLWV4dGVybmFsLTEpP1xcLmFtYXpvbmF3c1xcLmNvbSQvO1xuY29uc3QgQVdTX1BBUlRJVElPTl9TVUZGSVggPSBcImFtYXpvbmF3cy5jb21cIjtcblxuZXhwb3J0IGludGVyZmFjZSBCdWNrZXRIb3N0bmFtZVBhcmFtZXRlcnMge1xuICBhY2NlbGVyYXRlRW5kcG9pbnQ/OiBib29sZWFuO1xuICBiYXNlSG9zdG5hbWU6IHN0cmluZztcbiAgYnVja2V0TmFtZTogc3RyaW5nO1xuICBkdWFsc3RhY2tFbmRwb2ludD86IGJvb2xlYW47XG4gIHBhdGhTdHlsZUVuZHBvaW50PzogYm9vbGVhbjtcbiAgdGxzQ29tcGF0aWJsZT86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQnVja2V0SG9zdG5hbWUge1xuICBob3N0bmFtZTogc3RyaW5nO1xuICBidWNrZXRFbmRwb2ludDogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJ1Y2tldEhvc3RuYW1lKHtcbiAgYWNjZWxlcmF0ZUVuZHBvaW50ID0gZmFsc2UsXG4gIGJhc2VIb3N0bmFtZSxcbiAgYnVja2V0TmFtZSxcbiAgZHVhbHN0YWNrRW5kcG9pbnQgPSBmYWxzZSxcbiAgcGF0aFN0eWxlRW5kcG9pbnQgPSBmYWxzZSxcbiAgdGxzQ29tcGF0aWJsZSA9IHRydWVcbn06IEJ1Y2tldEhvc3RuYW1lUGFyYW1ldGVycyk6IEJ1Y2tldEhvc3RuYW1lIHtcbiAgaWYgKCFTM19IT1NUTkFNRV9QQVRURVJOLnRlc3QoYmFzZUhvc3RuYW1lKSkge1xuICAgIHJldHVybiB7XG4gICAgICBidWNrZXRFbmRwb2ludDogZmFsc2UsXG4gICAgICBob3N0bmFtZTogYmFzZUhvc3RuYW1lXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IFtyZWdpb24sIGhvc3RuYW1lU3VmZml4XSA9IFMzX1VTX0VBU1RfMV9BTFROQU1FX1BBVFRFUk4udGVzdChcbiAgICBiYXNlSG9zdG5hbWVcbiAgKVxuICAgID8gW1widXMtZWFzdC0xXCIsIEFXU19QQVJUSVRJT05fU1VGRklYXVxuICAgIDogcGFydGl0aW9uU3VmZml4KGJhc2VIb3N0bmFtZSk7XG5cbiAgaWYgKFxuICAgIHBhdGhTdHlsZUVuZHBvaW50IHx8XG4gICAgIWlzRG5zQ29tcGF0aWJsZUJ1Y2tldE5hbWUoYnVja2V0TmFtZSkgfHxcbiAgICAodGxzQ29tcGF0aWJsZSAmJiBET1RfUEFUVEVSTi50ZXN0KGJ1Y2tldE5hbWUpKVxuICApIHtcbiAgICByZXR1cm4ge1xuICAgICAgYnVja2V0RW5kcG9pbnQ6IGZhbHNlLFxuICAgICAgaG9zdG5hbWU6IGR1YWxzdGFja0VuZHBvaW50XG4gICAgICAgID8gYHMzLmR1YWxzdGFjay4ke3JlZ2lvbn0uJHtob3N0bmFtZVN1ZmZpeH1gXG4gICAgICAgIDogYmFzZUhvc3RuYW1lXG4gICAgfTtcbiAgfVxuXG4gIGlmIChhY2NlbGVyYXRlRW5kcG9pbnQpIHtcbiAgICBiYXNlSG9zdG5hbWUgPSBgczMtYWNjZWxlcmF0ZSR7XG4gICAgICBkdWFsc3RhY2tFbmRwb2ludCA/IFwiLmR1YWxzdGFja1wiIDogXCJcIlxuICAgIH0uJHtob3N0bmFtZVN1ZmZpeH1gO1xuICB9IGVsc2UgaWYgKGR1YWxzdGFja0VuZHBvaW50KSB7XG4gICAgYmFzZUhvc3RuYW1lID0gYHMzLmR1YWxzdGFjay4ke3JlZ2lvbn0uJHtob3N0bmFtZVN1ZmZpeH1gO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBidWNrZXRFbmRwb2ludDogdHJ1ZSxcbiAgICBob3N0bmFtZTogYCR7YnVja2V0TmFtZX0uJHtiYXNlSG9zdG5hbWV9YFxuICB9O1xufVxuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciBhIGdpdmVuIHN0cmluZyBpcyBETlMgY29tcGxpYW50IHBlciB0aGUgcnVsZXMgb3V0bGluZWQgYnlcbiAqIFMzLiBMZW5ndGgsIGNhcGl0YWl6YXRpb24sIGFuZCBsZWFkaW5nIGRvdCByZXN0cmljdGlvbnMgYXJlIGVuZm9yY2VkIGJ5IHRoZVxuICogRE9NQUlOX1BBVFRFUk4gcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL0FtYXpvblMzL2xhdGVzdC9kZXYvQnVja2V0UmVzdHJpY3Rpb25zLmh0bWxcbiAqL1xuZnVuY3Rpb24gaXNEbnNDb21wYXRpYmxlQnVja2V0TmFtZShidWNrZXROYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgcmV0dXJuIChcbiAgICBET01BSU5fUEFUVEVSTi50ZXN0KGJ1Y2tldE5hbWUpICYmXG4gICAgIUlQX0FERFJFU1NfUEFUVEVSTi50ZXN0KGJ1Y2tldE5hbWUpICYmXG4gICAgIURPVFNfUEFUVEVSTi50ZXN0KGJ1Y2tldE5hbWUpXG4gICk7XG59XG5cbmZ1bmN0aW9uIHBhcnRpdGlvblN1ZmZpeChob3N0bmFtZTogc3RyaW5nKTogW3N0cmluZywgc3RyaW5nXSB7XG4gIGNvbnN0IHBhcnRzID0gaG9zdG5hbWUubWF0Y2goUzNfSE9TVE5BTUVfUEFUVEVSTikgYXMgUmVnRXhwTWF0Y2hBcnJheTtcblxuICByZXR1cm4gW3BhcnRzWzJdLCBob3N0bmFtZS5yZXBsYWNlKG5ldyBSZWdFeHAoYF4ke3BhcnRzWzBdfWApLCBcIlwiKV07XG59XG4iXX0=