{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\Bank\\\\react-api\\\\src\\\\App.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport withFirebaseAuth from 'react-with-firebase-auth';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseconfig from './firebaseconfig'; //import logo from './logo.svg';\n\nimport './App.css';\nimport { FormInput } from \"shards-react\";\nimport Users from './components/users';\nimport { useInfiniteScroll } from \"./useInfiniteScroll\"; //import InfiniteScroll from 'react-infinite-scroller'\n\nconst firebaseApp = firebase.initializeApp(firebaseconfig);\n\nconst App = () => {\n  let infiniteScroll = useInfiniteScroll();\n  const [tableContent, setTableContent] = useState([]);\n  useEffect(() => {\n    fetch(\"https://localhost:44358/api/UserInformations/45505\").then(response => response.json()).then(json => setTableContent(json));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"User ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Title\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, tableContent.slice(0, infiniteScroll).map(content => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: content.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, content.firstName), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, content.accountNumer));\n  }))));\n};\n\nexport default App;\n/*class App extends Component{\r\n\r\n  apiUrl = 'https://localhost:44358/api/UserInformations/45505';\r\n\r\n  render() {\r\n    //const element = fetch(this.apiUrl)\r\n    //  .then((response) => response.json())\r\n    //  .then((data) => console.log('Here is my data returned:', data[0].accountNumber));\r\n    const {\r\n      user,\r\n      signOut,\r\n      signInWithGoogle,\r\n    } = this.props;\r\n\r\n    return (  \r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src=\"https://media.giphy.com/media/9P3DSO2FzzvWxDtdWP/giphy.gif\"/>\r\n          {\r\n            user\r\n              ? <p>Hello, {user.displayName}<Users>Users</Users>\r\n              <FormInput size=\"sm\" placeholder=\"Small input\" className=\"mb-2\" />\r\n              </p>\r\n              : <p>Please sign in.</p>   \r\n              \r\n          }\r\n\r\n          {\r\n            user\r\n              ? <button onClick={signOut}>Sign out</button>\r\n              : <button onClick={signInWithGoogle}>Sign in with Google</button>\r\n          }\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}//End Class App\r\n\r\nconst firebaseAppAuth = firebaseApp.auth();\r\n\r\nconst providers = {\r\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n};\r\n\r\nexport default withFirebaseAuth({\r\n  providers,\r\n  firebaseAppAuth,\r\n})(App);\r\n\r\n*/\n//======================================================================\n\n/*\r\n\r\n//./src/App.js';\r\n\r\n\r\n//import React, {Component} from 'react';\r\n//import React, { useState } from \"react\";\r\nimport Contacts from './components/contacts';\r\n\r\n    class App2 extends Component {\r\n      \r\n      state = {\r\n        contacts: []\r\n      }\r\n      \r\n      componentDidMount() {\r\n        fetch('https://localhost:44358/api/UserInformations')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n          this.setState({ contacts: data })\r\n        })\r\n        .catch(console.log)\r\n      }\r\n\r\n\r\n      render() {\r\n        return (\r\n          <React.Fragment>\r\n          <form>\r\n            <label>Account</label>\r\n          </form>\r\n          <Contacts contacts={this.state.contacts} />\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    } \r\n\r\n    //export default App2;*/","map":{"version":3,"sources":["C:/Git/Bank/react-api/src/App.js"],"names":["React","Component","useState","useEffect","withFirebaseAuth","firebase","firebaseconfig","FormInput","Users","useInfiniteScroll","firebaseApp","initializeApp","App","infiniteScroll","tableContent","setTableContent","fetch","then","response","json","textAlign","slice","map","content","id","paddingTop","firstName","accountNumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,iBAAT,QAAkC,qBAAlC,C,CACA;;AAEA,MAAMC,WAAW,GAAGL,QAAQ,CAACM,aAAT,CAAuBL,cAAvB,CAApB;;AAGA,MAAMM,GAAG,GAAG,MAAM;AAChB,MAAIC,cAAc,GAAGJ,iBAAiB,EAAtC;AAEA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAIJ,eAAe,CAACI,IAAD,CAF/B;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,YAAY,CAACO,KAAb,CAAmB,CAAnB,EAAsBR,cAAtB,EAAsCS,GAAtC,CAA0CC,OAAO,IAAI;AACpD,wBACE;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCF,OAAO,CAACG,SAA5C,CADF,eAEE;AAAI,MAAA,KAAK,EAAE;AAAED,QAAAA,UAAU,EAAE;AAAd,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCF,OAAO,CAACI,YAA5C,CAFF,CADF;AAMD,GAPA,CADH,CAPF,CADF,CADF;AAsBD,CAjCD;;AAmCA,eAAef,GAAf;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;;AACA","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport withFirebaseAuth from 'react-with-firebase-auth'\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport firebaseconfig from './firebaseconfig';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { FormInput } from \"shards-react\";\r\nimport Users from './components/users'\r\nimport { useInfiniteScroll } from \"./useInfiniteScroll\";\r\n//import InfiniteScroll from 'react-infinite-scroller'\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseconfig);\r\n\r\n\r\nconst App = () => {\r\n  let infiniteScroll = useInfiniteScroll();\r\n\r\n  const [tableContent, setTableContent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://localhost:44358/api/UserInformations/45505\")\r\n      .then(response => response.json())\r\n      .then(json => setTableContent(json));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>User ID</th>\r\n            <th>Title</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableContent.slice(0, infiniteScroll).map(content => {\r\n            return (\r\n              <tr key={content.id}>\r\n                <td style={{ paddingTop: \"10px\" }}>{content.firstName}</td>\r\n                <td style={{ paddingTop: \"10px\" }}>{content.accountNumer}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*class App extends Component{\r\n\r\n  apiUrl = 'https://localhost:44358/api/UserInformations/45505';\r\n\r\n  render() {\r\n    //const element = fetch(this.apiUrl)\r\n    //  .then((response) => response.json())\r\n    //  .then((data) => console.log('Here is my data returned:', data[0].accountNumber));\r\n    const {\r\n      user,\r\n      signOut,\r\n      signInWithGoogle,\r\n    } = this.props;\r\n\r\n    return (  \r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src=\"https://media.giphy.com/media/9P3DSO2FzzvWxDtdWP/giphy.gif\"/>\r\n          {\r\n            user\r\n              ? <p>Hello, {user.displayName}<Users>Users</Users>\r\n              <FormInput size=\"sm\" placeholder=\"Small input\" className=\"mb-2\" />\r\n              </p>\r\n              : <p>Please sign in.</p>   \r\n              \r\n          }\r\n\r\n          {\r\n            user\r\n              ? <button onClick={signOut}>Sign out</button>\r\n              : <button onClick={signInWithGoogle}>Sign in with Google</button>\r\n          }\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}//End Class App\r\n\r\nconst firebaseAppAuth = firebaseApp.auth();\r\n\r\nconst providers = {\r\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n};\r\n\r\nexport default withFirebaseAuth({\r\n  providers,\r\n  firebaseAppAuth,\r\n})(App);\r\n\r\n*/\r\n//======================================================================\r\n/*\r\n\r\n//./src/App.js';\r\n\r\n\r\n//import React, {Component} from 'react';\r\n//import React, { useState } from \"react\";\r\nimport Contacts from './components/contacts';\r\n\r\n    class App2 extends Component {\r\n      \r\n      state = {\r\n        contacts: []\r\n      }\r\n      \r\n      componentDidMount() {\r\n        fetch('https://localhost:44358/api/UserInformations')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n          this.setState({ contacts: data })\r\n        })\r\n        .catch(console.log)\r\n      }\r\n\r\n\r\n      render() {\r\n        return (\r\n          <React.Fragment>\r\n          <form>\r\n            <label>Account</label>\r\n          </form>\r\n          <Contacts contacts={this.state.contacts} />\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    } \r\n\r\n    //export default App2;*/"]},"metadata":{},"sourceType":"module"}