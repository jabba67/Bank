/**
 * @hidden
 */
export var SELECTION_TYPE;
(function (SELECTION_TYPE) {
    SELECTION_TYPE["single"] = "single";
    SELECTION_TYPE["multiple"] = "multiple";
    SELECTION_TYPE["none"] = "none";
})(SELECTION_TYPE || (SELECTION_TYPE = {}));
/**
 * @hidden
 */
export var SELECTION_ACTION;
(function (SELECTION_ACTION) {
    SELECTION_ACTION["toggle"] = "toggle";
    SELECTION_ACTION["remove"] = "remove";
})(SELECTION_ACTION || (SELECTION_ACTION = {}));
/**
 * @hidden
 */
export var selectionReducer = function (state, action) {
    switch (action.selection) {
        case SELECTION_TYPE.single:
            switch (action.type) {
                case SELECTION_ACTION.toggle: {
                    if (!Array.isArray(state) || state === null) {
                        return action.payload === state ? null : action.payload;
                    }
                    throw new Error('State cannot be an array in single selection');
                }
                case SELECTION_ACTION.remove: {
                    return action.payload === state ? null : state;
                }
                default:
                    return state;
            }
        case SELECTION_TYPE.multiple:
            switch (action.type) {
                case SELECTION_ACTION.toggle: {
                    if (Array.isArray(state)) {
                        return state.some(function (i) { return i === action.payload; })
                            ? state.filter(function (i) { return i !== action.payload; })
                            : state.concat([action.payload]);
                    }
                    if (state === null) {
                        return [action.payload];
                    }
                    throw new Error('State cannot be non-array in multiple selection');
                }
                case SELECTION_ACTION.remove: {
                    return state.some(function (i) { return i === action.payload; })
                        ? state.filter(function (i) { return i !== action.payload; })
                        : state.concat([action.payload]);
                }
                default:
                    return state;
            }
        case SELECTION_TYPE.none:
            return null;
        default:
            return state;
    }
};
//# sourceMappingURL=selection-reducer.js.map