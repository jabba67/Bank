{"version":3,"sources":["components/grabTransactionHistory.js","components/grabAccountBalance.js","components/grabCheckingAccountBalance.js","components/AccountBalance.js","components/grabCheckingAccountNumber.js","components/grabAccountNumber.js","components/AccountInfo.js","components/signUp.js","App.js","firebaseconfig.js","serviceWorker.js","index.js"],"names":["TransHistory","transHistory","map","item","i","key","class","AccountBalance","balance","Object","keys","filter","CheckingAccountBalance","checkingaccountbalance","axios","require","AccountBalanceGet","state","handleSubmit","bind","input","React","createRef","event","accountBalance","preventDefault","this","checkingAccountBalance","console","log","parseInt","current","value","props","userEmail","alert","window","location","reload","method","url","data","EmailAdress","fetch","then","res","json","setState","catch","style","backgroundColor","className","maxHeight","align","onSubmit","type","ref","maxWidth","Table","striped","bordered","hover","variant","Tab","colSpan","Component","CheckingAccountNumbers","checkingaccountnumber","AccountNumbers","accountnumber","AccountInfo","SignUp","useState","email","setEmail","password","setPassword","firstName","setfirstName","lastName","setlastName","age","setAge","birthDate","setbirthDate","socialSecurity","setsocialSecurity","address","setAddress","phoneNumber","setphoneNumber","setBalance","Math","floor","random","length","String","onChange","target","placeholder","firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","contacts","datas","account","handlelogIn","handleChange","info","acount","get","response","signInWithGoogle","user","signOut","classes","fill","vertical","href","path","component","render","onClick","src","size","signUp","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider","withFirebaseAuth","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.24e5f540.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TransHistory = ({ transHistory }) => {\r\n\r\n  return (\r\n    <div>\r\n     {transHistory.map((item,i) => (\r\n        <div >\r\n            <h6 key={i} class=\"card-title\">{item}</h6>\r\n        </div>\r\n      ))}\r\n      \r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TransHistory;","import React from 'react'\r\n\r\n    const AccountBalance = ({ balance }) => {\r\n\r\n      return (\r\n        <div>\r\n         {Object.keys(balance).filter(key => key === 'accountBalance').map((item,i) => (\r\n            <div>\r\n                <h6 key={i} class=\"card-title\">{balance[item]}</h6>\r\n            </div>\r\n          ))}\r\n          \r\n        </div>\r\n      )\r\n    };\r\n\r\n    export default AccountBalance;","import React from 'react'\r\n\r\n    const CheckingAccountBalance = ({ checkingaccountbalance }) => {\r\n\r\n      return (\r\n        <div>\r\n         {Object.keys(checkingaccountbalance).filter(key => key === 'checkingAccountBalance').map((item,i) => (\r\n            <div>\r\n                <h6 key={i} class=\"card-title\">{checkingaccountbalance[item]}</h6>\r\n            </div>\r\n          ))}\r\n          \r\n        </div>\r\n      )\r\n    };\r\n\r\n    export default CheckingAccountBalance;","import React, { Component } from \"react\";\r\nimport {Alert,Container,Row,Col,Button,\r\n    ButtonGroup,ButtonToolbar,Form,FormGroup,FormInput,InputGroup,\r\n    Card,CardHeader,CardTitle,CardImg,CardBody,CardFooter,Navbar,\r\n    NavbarToggler,NavbarBrand,Nav,NavItem,NavLink,InputGroupAddon,Collapse,\r\n    InputGroupText} from \"shards-react\";\r\nimport AccountBalance from './grabAccountBalance';\r\nimport CheckingAccountBalance from './grabCheckingAccountBalance';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TransHistory from './grabTransactionHistory';\r\nimport { Tab } from \"@material-ui/core\";\r\nconst axios = require('axios');\r\n\r\n\r\n\r\nexport default class AccountBalanceGet extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    balance: [],\r\n    checkingaccountbalance: [],\r\n    transHistory: [],\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    var accountBalance;\r\n    var CheckingAccountBalance = this.state.checkingaccountbalance.checkingAccountBalance;\r\n    var current = this.state.balance.accountBalance;\r\n    var CurrentChecking = this.state.checkingaccountbalance.checkingAccountBalance;\r\n    console.log('the value of account balance rn is: ' + this.state.balance.accountBalance);\r\n    console.log('the value of checking account balance rn is: ' + this.state.checkingaccountbalance.checkingAccountBalance);\r\n    accountBalance = (parseInt(this.input.current.value)+ this.state.balance.accountBalance);\r\n    //CheckingAccountBalance = (parseInt(this.input.CurrentChecking.value)+ this.state.checkingaccountbalance.checkingAccountBalance);\r\n    console.log('the value of AccountBalance rn is: ' + accountBalance);\r\n    console.log('the value of Checking Account Balance rn is: ' + CheckingAccountBalance);\r\n    console.log('the value of email rn is: ' + this.props.userEmail);\r\n\r\n    alert(\"New Account Balances: Main Account Balance: \" + accountBalance + \" Checking Account Balance: \" + CheckingAccountBalance);\r\n    window.location.reload(false);\r\n\r\n    axios({\r\n      method: 'PATCH',\r\n      url: `https://localhost:44358/api/UserInformations/${this.props.userEmail}`,\r\n      data: {\r\n        EmailAdress: this.props.userEmail, //\"arcowirexzs@gmail.com\",\r\n        AccountBalance: accountBalance,\r\n        CheckingAccountBalance: CheckingAccountBalance\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`https://localhost:44358/api/UserInformations/${this.props.userEmail}`)\r\n    .then(res => res.json())\r\n    .then((data) =>  {\r\n      this.setState({ balance: data })\r\n    })\r\n    .catch(console.log)\r\n\r\n    fetch(`https://localhost:44358/api/UserInformations/${this.props.userEmail}`)\r\n    .then(res => res.json())\r\n    .then((data) =>  {\r\n      this.setState({ checkingaccountbalance: data })\r\n    })\r\n    .catch(console.log)\r\n\r\n    fetch(`https://localhost:44358/api/TransactionTrackings/45505`)\r\n    .then(res => res.json())\r\n    .then((data) =>  {\r\n      this.setState({ transHistory: data })\r\n    })\r\n    .catch(console.log)\r\n  }\r\n  render() {\r\n    return (\r\n      <div class = \"AccountBalance\" style={{ backgroundColor: 'transparent'}}>\r\n      <Container className=\"dr-example-container\">\r\n        <Row>\r\n          <Col>\r\n            <Card style={{ maxHeight: \"500px\", backgroundColor: 'white' }}>\r\n              <CardHeader >ACCOUNT BALANCES</CardHeader>\r\n              <CardBody>\r\n                  <p>Your current Account Balance is: <AccountBalance balance ={this.state.balance}/></p>\r\n                  <p>Your current Checking Account Balance is: <CheckingAccountBalance checkingaccountbalance ={this.state.checkingaccountbalance}/></p>\r\n                  <div align = \"center\"><form onSubmit ={this.handleSubmit}>\r\n                      <label> Deposit to account: \r\n                        <input type=\"text\" ref={this.input}/>\r\n                      </label>\r\n                      <input type=\"submit\" value=\"Deposit\" />\r\n                  \r\n                      {/*<label> Deposit to checking account: \r\n                        <input type=\"text\" ref={this.input}/>\r\n                      </label>\r\n                      <input type=\"submit\" value=\"Deposit\" />*/}\r\n                      </form>\r\n                  </div>\r\n                  <br></br>\r\n              </CardBody>\r\n            </Card>\r\n          </Col> \r\n          <Col>\r\n            <Card style={{ maxHeight: \"500px\", backgroundColor: 'white' }}>\r\n            <CardHeader>Account Transaction History:</CardHeader>\r\n              <CardBody>\r\n                  <center><div class = \"ScrollBox\">\r\n                      <TransHistory transHistory = {this.state.transHistory}/>\r\n                  </div></center>\r\n              </CardBody>  \r\n            </Card>\r\n          </Col> \r\n        </Row>\r\n        <br></br>\r\n        <Row>\r\n          <Col></Col>\r\n          <Col>\r\n          <Card style={{ maxWidth: \"1000px\", backgroundColor: 'white' }}>\r\n          <CardHeader>Experimental Table:</CardHeader>\r\n              <CardBody >\r\n                <Table striped bordered hover variant=\"dark\">\r\n                  <thead>\r\n                    <tr>\r\n                      \r\n                      <th>Account Number </th><Tab></Tab>\r\n                      <th>Transaction Time </th><Tab></Tab>\r\n                      <th>Amount </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Mark</td><Tab></Tab>\r\n                      <td>Otto</td><Tab></Tab>\r\n                      <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Jacob</td><Tab></Tab>\r\n                      <td>Thornton</td><Tab></Tab>\r\n                      <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td colSpan=\"1\">Larry the Bird</td><Tab></Tab>\r\n                      <td>@twitter</td><Tab></Tab>\r\n                      <td>@instagram</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>  \r\n            </Card>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\n\r\n    const CheckingAccountNumbers = ({ checkingaccountnumber }) => {\r\n\r\n      return (\r\n        <div>\r\n         {Object.keys(checkingaccountnumber).filter(key => key === 'checkingAccountNumber').map((item,i) => (\r\n            <div>\r\n                <h6 key={i} class=\"card-title\">{checkingaccountnumber[item]}</h6>\r\n            </div>\r\n          ))}\r\n          \r\n        </div>\r\n      )\r\n    };\r\n\r\n    export default CheckingAccountNumbers;","import React from 'react'\r\n\r\n    const AccountNumbers = ({ accountnumber }) => {\r\n\r\n      return (\r\n        <div>\r\n         {Object.keys(accountnumber).filter(key => key === 'accountNumber').map((item,i) => (\r\n            <div>\r\n                <h6 key={i} class=\"card-title\">{accountnumber[item]}</h6>\r\n            </div>\r\n          ))}\r\n          \r\n        </div>\r\n      )\r\n    };\r\n\r\n    export default AccountNumbers;","import React, { Component } from \"react\";\r\nimport {Alert,Breadcrumb,BreadcrumbItem,Container,Row,Col,Button,\r\n    ButtonGroup,ButtonToolbar,Form,FormGroup,FormInput,InputGroup,\r\n    Card,CardHeader,CardTitle,CardImg,CardBody,CardFooter,Navbar,\r\n    NavbarToggler,NavbarBrand,Nav,NavItem,NavLink,Dropdown,DropdownToggle,\r\n    DropdownMenu,DropdownItem,InputGroupAddon,Collapse,\r\n    InputGroupText} from \"shards-react\";\r\nimport EmailAddress from './grabEmail';\r\nimport CheckingAccountNumbers from \"./grabCheckingAccountNumber\";\r\nimport AccountNumbers from \"./grabAccountNumber\";\r\nimport App from '../App'\r\nconst axios = require('axios'); \r\n\r\nexport default class AccountInfo extends React.Component{\r\n\r\n  state = {\r\n    accountnumber: [],\r\n    checkingaccountnumber: []\r\n  }\r\n\r\ncomponentWillMount() {\r\n    fetch(`https://localhost:44358/api/UserInformations/${this.props.userEmail}`)\r\n    .then(res => res.json())\r\n    .then((data) =>  {\r\n      this.setState({ accountnumber: data })\r\n    })\r\n    .catch(console.log)\r\n\r\n    fetch(`https://localhost:44358/api/UserInformations/${this.props.userEmail}`)\r\n  .then(res => res.json())\r\n  .then((data) =>  {\r\n    this.setState({checkingaccountnumber: data})\r\n  })\r\n  .catch(console.log)\r\n\r\n}\r\n  render() {\r\n    return (\r\n      <div class = \"AccountInfo\">\r\n        <center>\r\n        <Card style={{maxHeight:\"360px\", maxWidth: \"370px\", backgroundColor: 'white'}}>\r\n                        <CardHeader>Account Info</CardHeader>\r\n                        <CardBody>\r\n                          <CardTitle>      ALL ACCOUNT INFO      </CardTitle>\r\n                          <p>Account Number:  <AccountNumbers accountnumber ={this.state.accountnumber}/></p>\r\n                          <p>Checking Account Number:  <CheckingAccountNumbers checkingaccountnumber ={this.state.checkingaccountnumber}/></p>\r\n                        </CardBody>\r\n                      </Card>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}","// import React, { Component, useState, useEffect, Image, ImageBackground, useReducer } from 'react';\r\nimport React, {useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst SignUp = () => {\r\n// class signUp extends React.Component{\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [firstName, setfirstName] = useState(\"\")\r\n    const [lastName, setlastName] = useState(\"\")\r\n    const [age, setAge] = useState(0)\r\n    const [birthDate, setbirthDate] = useState(\"\")\r\n    const [socialSecurity, setsocialSecurity] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n    const [phoneNumber, setphoneNumber] = useState(\"\")\r\n    const [accountNumber, setAccountNumber] = useState(0)\r\n    const [balance, setBalance] = useState(0)\r\n\r\n   const handleEmailChange = (event) => {\r\n        console.log(event.target.value)\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event) => {\r\n        console.log(event.target.value)\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleFnameChange = (event) => {\r\n        console.log(event.target.value)\r\n        setfirstName(event.target.value)\r\n    }\r\n    \r\n    const handleLnameChange = (event) => {\r\n        console.log(event.target.value)\r\n        setlastName(event.target.value)\r\n    }\r\n    \r\n    const handleAgeChange = (event) => {\r\n        console.log(event.target.value)\r\n        setAge(event.target.value)\r\n    }\r\n\r\n    const handleBdayChange = (event) => {\r\n        console.log(event.target.value)\r\n        setbirthDate(event.target.value)\r\n        console.log(birthDate.length)\r\n    }\r\n\r\n    const handleSSChange = (event) => {\r\n        console.log(event.target.value)\r\n        setsocialSecurity(event.target.value)\r\n    }\r\n\r\n    const handleAddressChange = (event) => {\r\n        console.log(event.target.value)\r\n        setAddress(event.target.value)\r\n    }\r\n\r\n    \r\n    const handlePhoneNumChange = (event) => {\r\n        console.log(event.target.value)\r\n        setphoneNumber(event.target.value)\r\n    }\r\n\r\n    const handleBalanceChange = (event) => {\r\n        console.log(event.target.value)\r\n        setBalance(event.target.value)\r\n    }\r\n\r\n    const addAccount = (event) => {\r\n        event.preventDefault();\r\n        console.log(email);\r\n        console.log(password);\r\n        console.log(firstName);\r\n        console.log(lastName);\r\n        console.log(age);\r\n        console.log(birthDate);\r\n        console.log(socialSecurity);\r\n        console.log(address);\r\n        console.log(phoneNumber);\r\n        console.log(\"Account Number: \" + Math.floor(Math.random() * 99999-10000));\r\n        console.log(balance);\r\n\r\n        // validate inputs\r\n        if(birthDate.length !== 10){\r\n            alert(\"wrong birthday dumbass\")\r\n            setbirthDate(\"\")\r\n            return\r\n        }\r\n\r\n        if(socialSecurity.length !== 11){\r\n            alert(\"invalid social security\")\r\n            setsocialSecurity(\"\")\r\n            return\r\n        }\r\n\r\n        if(phoneNumber.length !==12) {\r\n            alert(\"invalid phone number\")\r\n            setphoneNumber(\"\")\r\n            return\r\n        }\r\n\r\n        const accountObject = {\r\n            FirstName : firstName,\r\n            AccountBalance : balance,\r\n            LastName : lastName,\r\n            Age: age,\r\n            BirthDate: birthDate,\r\n            SocialSecurityNumber: socialSecurity,\r\n            Address: address,\r\n            PhoneNumber: phoneNumber,\r\n            EmailAddress: email,\r\n            AccountNumber : accountNumber,\r\n            Password: password\r\n        }\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: `https://localhost:44358/api/UserInformations`,\r\n            data: {\r\n                \"FirstName\": String(firstName),\r\n                \"AccountBalance\": parseInt(balance),\r\n                \"LastName\": String(lastName),\r\n                \"Age\": parseInt(age),\r\n                \"BirthDate\": String(birthDate),\r\n                \"SocialSecurityNumber\": String(socialSecurity),\r\n                \"Address\": String(address),\r\n                \"PhoneNumber\": String(phoneNumber),\r\n                \"EmailAddress\": String(email),\r\n                \"AccountNumber\": Math.floor(Math.random() * (99999-10000)+10000),\r\n                \"Password\": String(password)\r\n            }\r\n          });\r\n    }\r\n    \r\n    // render(){\r\n        return (\r\n            <><div>\r\n                <form onSubmit={addAccount}>\r\n                        <label>Email:\r\n                        <input \r\n                        value={email} \r\n                        onChange={handleEmailChange}\r\n                        />\r\n                        </label>\r\n                        <br></br>\r\n                        <label>Password:\r\n                        <input \r\n                        value={password}\r\n                        onChange={handlePasswordChange}\r\n                        />\r\n                        </label>\r\n                        <br></br>\r\n                        <label>First Name:\r\n                        <input \r\n                        value={firstName}\r\n                        onChange={handleFnameChange}\r\n                        />\r\n                        </label>\r\n                        <br></br>\r\n                        <label>Last Name:\r\n                        <input \r\n                        value={lastName}\r\n                        onChange={handleLnameChange}\r\n                        />\r\n                        </label>\r\n                        <br></br>\r\n                        <label>Age:\r\n                        <input \r\n                        value={age}\r\n                        onChange={handleAgeChange}\r\n                        />\r\n                        </label>\r\n                        <br></br>\r\n                        <label>Birthday:\r\n                        <input \r\n                        placeholder=\"MM/DD/YYYY\"\r\n                        value={birthDate}\r\n                        onChange={handleBdayChange}\r\n                        />\r\n                        </label>\r\n                        <br></br>\r\n                        <label>Social Security:\r\n                        <input \r\n                        value={socialSecurity}\r\n                        onChange={handleSSChange}\r\n                        />\r\n                        </label>\r\n                        <br></br>\r\n                        <label>Address:\r\n                        <input \r\n                        value={address}\r\n                        onChange={handleAddressChange}\r\n                        />\r\n                        </label>\r\n                        <br></br>\r\n                        <label>Phone Number:\r\n                        <input \r\n                        value={phoneNumber}\r\n                        onChange={handlePhoneNumChange}\r\n                        />\r\n                        </label>\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label>Account Balance:\r\n                        <input \r\n                        value={balance}\r\n                        onChange={handleBalanceChange}\r\n                        />\r\n                        </label>\r\n                        <br></br>\r\n                        <button type=\"submit\">submit</button>\r\n                </form>\r\n            </div></>\r\n        );\r\n    // }\r\n}\r\n\r\nexport default SignUp","import React, { Component, useState, useEffect, Image, ImageBackground, useReducer, Alert, Toast } from 'react';\r\nimport {Route,HashRouter, BrowserRouter as Router} from \"react-router-dom\";\r\nimport ReactDOM from 'react-dom';\r\nimport withFirebaseAuth from 'react-with-firebase-auth'\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport firebaseconfig from './firebaseconfig';\r\nimport './App.css';\r\nimport {BreadcrumbItem,Row,Container, Col,Button,\r\n  ButtonGroup,ButtonToolbar,Form,FormGroup,FormInput,InputGroup,\r\n  Card,CardHeader,CardTitle,CardImg,CardBody,CardFooter,Navbar,\r\n  NavbarToggler,NavbarBrand,Nav,NavItem,NavLink,Dropdown,DropdownToggle,\r\n  DropdownMenu,DropdownItem,InputGroupAddon,Collapse,\r\n  InputGroupText, Label} from \"shards-react\";\r\nimport TransHistory from './components/grabTransactionHistory';\r\nimport AccountBalance from './components/AccountBalance';\r\nimport AccountInfo from './components/AccountInfo';\r\nimport signUp from './components/signUp';\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseconfig);\r\nconst axios = require('axios');\r\nconst drawerWidth = 240;\r\n\r\nclass App extends React.Component{\r\n  constructor() {\r\n    super();\r\n    //this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.input = React.createRef();\r\n    this.handlelogIn = this.handlelogIn.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  state = {\r\n    contacts: [],\r\n    datas: [],\r\n    transHistory: [],\r\n    account: \" \"\r\n  }\r\n\r\n  handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n\r\n  handlelogIn(event) {\r\n    event.preventDefault();\r\n    console.log(this.state.acount) \r\n    axios.get(`https://localhost:44358/api/UserInformations/${this.state.account}`)\r\n    .then(response => {\r\n      console.log(response.data)\r\n      this.setState({ datas: response.data})\r\n      this.setState({ contacts: response.data})\r\n      console.log(this.state.datas)\r\n    })\r\n    .then(\r\n      this.props.signInWithGoogle()\r\n    )\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({ account: event.target.value  })\r\n    console.log(this.state.account)\r\n  }\r\n\r\n  /*handleSubmit(event) {\r\n    event.preventDefault();\r\n    alert('A name was submitted: ' + this.input.current.value);\r\n    var accountBalance;\r\n    var current = this.state.contacts.accountBalance;\r\n    console.log('the value of contacts rn is: ' + this.state.contacts.accountBalance);\r\n    accountBalance = (parseInt(this.input.current.value)+ this.state.contacts.accountBalance);\r\n\r\n    axios({\r\n      method: 'PATCH',\r\n      url: 'https://localhost:44358/api/UserInformations/45505',\r\n      data: {\r\n        accountBalance: accountBalance,\r\n        accountNumber: 45505\r\n      }\r\n    });\r\n      //IMPLEMENT THIS: Send request to API to get account number based on validation email\r\n      //Then With the account number perform actions like GET and PATCH on the stored account number\r\n  }*/\r\n  render() {\r\n    const {\r\n      user,\r\n      classes,\r\n      signOut,\r\n      signInWithGoogle,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"App\" >\r\n        <header className=\"App-header\">\r\n          {\r\n            user\r\n              ? <>\r\n              \r\n              <Router>\r\n                <Nav fill vertical>\r\n                \r\n                  <NavItem>\r\n                    <li><NavLink href=\"/\">Home</NavLink></li>\r\n                    <Route path=\"/App\" component={App}/> \r\n                    <li><NavLink href=\"/AccountBalance\">Account Balance</NavLink></li>\r\n                    <Route path=\"/AccountBalance\" render ={(props) => <AccountBalance {...props} userEmail = {user.email}/>}/>\r\n                    <li><NavLink href=\"/AccountInfo\" >Account Info</NavLink></li>\r\n                    <Route path=\"/AccountInfo\" render ={(props) => <AccountInfo {...props} userEmail = {user.email}/>} />\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink onClick={signOut}>Sign Out</NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n              </Router>\r\n\r\n\r\n              {/* Need to build out dashboard here */}\r\n              {/*<AccountInfo instance2></AccountInfo>}\r\n              <AccountBalance instance></AccountBalance>*/}\r\n              \r\n          <div className=\"Container\">  \r\n            {/*<Container className=\"dr-example-container\">\r\n                <Row>\r\n                  <Col lg=\"3\">\r\n                    <AccountInfo instance2></AccountInfo>\r\n                    <br></br><br></br><br></br><br></br>\r\n                  </Col>\r\n                  <Col sm=\"12\" md=\"4\" lg=\"6\">\r\n                    <AccountInfo instance2></AccountInfo>\r\n                    <br></br><br></br><br></br><br></br>\r\n                  </Col>\r\n                  <Col lg=\"3\">\r\n                    <AccountInfo instance2></AccountInfo>\r\n                    <br></br><br></br><br></br><br></br>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col lg=\"3\">\r\n                    <br></br><br></br>\r\n                    Building a dashboard out here:\r\n                    </Col>\r\n                  <Col sm=\"12\" md=\"4\" lg=\"6\">\r\n                    <br></br><br></br>\r\n                    <AccountBalance instance></AccountBalance>\r\n                    <br></br><br></br>\r\n                  </Col>\r\n                  <Col lg=\"3\">\r\n                    <br></br><br></br>\r\n                    Building a dashboard out here:\r\n                  </Col>\r\n                </Row>\r\n\r\n            </Container>*/}\r\n              \r\n            </div>\r\n            </>\r\n            : <div class = \"SignIn\">\r\n                <br></br>\r\n              <Card style={{maxHeight:\"370\", maxWidth: \"380\", backgroundColor: 'white'}}>\r\n                  <CardHeader>Sign In</CardHeader>\r\n                  <CardImg src=\"https://t3.ftcdn.net/jpg/02/20/14/38/240_F_220143804_fc4xRygvJ8bn8JPQumtHJieDN4ORNyjs.jpg\" />\r\n                  <CardBody>\r\n                    <label> Please Login Using Google: </label>\r\n                    <br></br>\r\n                    <Button size = \"lg\" onClick = {signInWithGoogle}>Login</Button>\r\n                    <br></br>\r\n                    <label> Don't Have An Account?</label>\r\n                    <br></br>\r\n                      <Router>\r\n                      <a href=\"/signUp\">Sign Up</a>\r\n                    <Route path=\"/signUp\" component={signUp}/>\r\n                      </Router>\r\n                  </CardBody>\r\n              </Card>\r\n              <br></br>\r\n              </div>\r\n          }\r\n        </header>\r\n      </div>\r\n    );//End of Return\r\n  }//End of Render()\r\n}//End Class App\r\n\r\nconst firebaseAppAuth = firebaseApp.auth();\r\n\r\nconst providers = {\r\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\r\n};\r\n\r\nexport default withFirebaseAuth({\r\n  providers,\r\n  firebaseAppAuth,\r\n})(App);","export default {\r\n  apiKey: \"AIzaSyBQaHWVPad1LJTuYfT0uqUwY1Jcdxr-V7c\",\r\n  authDomain: \"bankauthentication-22b35.firebaseapp.com\",\r\n  databaseURL: \"https://bankauthentication-22b35.firebaseio.com\",\r\n  projectId: \"bankauthentication-22b35\",\r\n  storageBucket: \"bankauthentication-22b35.appspot.com\",\r\n  messagingSenderId: \"213888284001\",\r\n  appId: \"1:213888284001:web:1d1c36a2442d0e79ab4120\"\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import Login from './containers/Login'\r\n//import contact from './components/contacts'\r\nimport * as serviceWorker from './serviceWorker';\r\n//import Contacts from './components/contacts';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}